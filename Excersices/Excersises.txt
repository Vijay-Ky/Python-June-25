1. What is Python language?
2. What are the key features of Python?
3. Differentiate between lists and tuples.
4. Explain the ternary operator in Python.
5. What are negative indices?
6. Is Python case-sensitive?
7. How long can an identifier be in Python?
8. How would you convert a string into lowercase?
9. What is the pass statement in Python?
10. Explain help() and dir() functions in Python.
11. How do you get a list of all the keys in a dictionary?
12. What is slicing?
13. How would you declare a comment in Python?
14. How will you check if all characters in a string are alphanumeric?
15. How will you capitalize the first letter of a string?
16. We know Python is all the rage these days. But to be truly accepting of a great technology, you must know its pitfalls as well. Would you like to talk about this?
17. How do you insert an object at a given index in Python?
18. And how do you reverse a list?
19. What is the Python interpreter prompt?
20. How does a function return values?
21. How would you define a block in Python?
22. Why do we need break and continue in Python?
23. Will the do-while loop work if you don’t end it with a semicolon?
24. In one line, show us how you’ll get the max alphabetical character from a string.
25. What is Python good for?
26. Can you name ten built-in functions in Python and explain each in brief?
27. How will you convert a list into a string?
28. Can you explain the life cycle of a thread?
29. What is a dictionary in Python?
30. Explain the //, %, and ** operators in Python.
31) What are the benefits of using Python?
32) What is a dynamically typed language?
33) What is an Interpreted language?
34) What is PEP 8 and why is it important?	
35) How is memory managed in Python?
36) What are Python namespaces? Why are they used?
37) What is Scope in Python?	
38) What is Scope Resolution in Python?
39) What are decorators in Python?
40) What are lists and tuples? What is the key difference between the two?
41) What are Dict and List comprehensions?
42) What are the common built-in data types in Python?
43) What is lambda in Python? Why is it used?
44) What is pass in Python?
45) How do you copy an object in Python?
46) What is the difference between xrange and range in Python?
47) What are modules and packages in Python?
48) What are global, protected and private attributes in Python?
49) What is self in Python?
50) What is __init__?
51) What is break, continue and pass in Python?
52) What is pickling and unpickling?
53) What are generators in Python?
54) What is PYTHONPATH in Python?
55) What is the use of help() and dir() functions?
56) What is the difference between .py and .pyc files?
57) How Python is interpreted?
58) What are unittests in Python?
59) What is docstring in Python?
60) How are arguments passed by value or by reference in python?
61) What are iterators in Python?
62) What is slicing in Python?
63) Explain how can you make a Python Script executable on Unix?
64) Explain how to delete a file in Python?
65) Explain split() and join() functions in Python?
66) What is the difference between Python Arrays and lists?
67) What does *args and **kwargs mean?
68) What are negative indexes and why are they used?
69) What are the applications of Python?
70) What do you mean by Python literals?
71) Explain Python Functions?
72) What is zip() function in Python?
73) What is Python's parameter passing mechanism?
74) How to overload constructors or methods in Python?
75) What is the difference between remove() function and del statement?
76) What is swapcase() function in the Python?
77) How to remove whitespaces from a string in Python?
78) How to remove leading whitespaces from a string in the Python?
79) Why do we use join() function in Python?
80) Give an example of shuffle() method?
81) What is the use of break statement?
82) What is tuple in Python?
83) Which are the file related libraries/modules in Python?
84) What are the different file processing modes supported by Python?
85) What is an operator in Python?
86) What are the different types of operators in Python?
87) How to create a Unicode string in Python?
88) is Python interpreted language?
89) How is memory managed in Python?
90) What is the Python decorator?
91) What are the rules for a local and global variable in Python?
92) What is the namespace in Python?
93) What are iterators in Python?
94) What is a generator in Python?
95) What is slicing in Python?
96) What is a dictionary in Python?
97) What is Pass in Python?
98) Explain docstring in Python?
99) What is a negative index in Python?
100) What is pickling and unpickling in Python?
101) Which programming language is a good choice between Java and Python?
102) What is the usage of help() and dir() function in Python?
103) How can we make forms in Python?
104) What are the differences between Python 2.x and Python 3.x?
105) How can you organize your code to make it easier to change the base class?
106) How Python does Compile-time and Run-time code checking?
107) What is the shortest method to open a text file and display its content?
108) What is the usage of enumerate () function in Python?
109) Give the output of this example: A[3] if A=[1,4,6,7,9,66,4,94].
110) What will be the output of ['!!Welcome!!']*2?
111) What will be the output of data[-2] from the list data = [1,5,8,6,9,3,4]?
112) How to send an email in Python Language?
113) What is the difference between list and tuple?
114) What is lambda function in Python?
115) Why do lambda forms in Python not have the statements?
116) How can you convert a number to string?
117) Mention the rules for local and global variables in Python?
118) What is pickling and unpickling?
119) How is memory managed in Python?
120) What are the tools that help to find bugs or perform the static analysis?
121) What are Python decorators?
122) What is the difference between list and tuple?
123) How are arguments passed by value or by reference?
124) What is Dict and List comprehensions are?
125) What are built-in type does python provides?
126) Explain namespace in Python
127) What is lambda in Python?
128) Why lambda forms in python do not have statements?
129) Explain pass in Python
130) In Python what are iterators?
131) What is the unittest in Python?
132) Explain slicing in Python?
133) What are generators in Python?
134) What is docstring in Python?
135) How can you copy an object in Python?
136) What is negative index in Python?
137) How can you convert a number to a string?
138) What is the difference between xrange and range?
139) What is module and package in Python?
140) What are the rules for local and global variables in Python?
141) How can you share global variables across modules?
142) Explain how can you make a Python Script executable on Unix?
143) Explain how to delete a file in Python?
144) How can you access a module written in Python from C?
145) What is the use of // operator in Python?
146) Mention five benefits of using Python
147) Mention the use of the split function in Python
148) Explain Flask and its benefits
149) What is the difference between Django, Pyramid, and Flask?
150) What is Flask-WTF and what are their features?
151) Explain what is the common way for the Flask script to work?
152) Explain how you can access sessions in Flask?
153) Is Flask an MVC model, and if yes give an example showing MVC pattern for your application?
154) Explain database connection in Python Flask?
155) If you have multiple Memcache servers, and one of them fails that contain data, will it try to get them?
156) Explain how you can minimize the Memcached server outages in your Python Development?
157) Explain what is Dogpile effect? How can you prevent this effect?
158) Explain how memcached should not be used in your Python project?
159) What is Python If Statement?
160) Explain While loop in Python with example
161) What is enumerate() in Python?
162) How can you use for loop to repeat the same statement over and again?
163) What is Tuple Matching in Python?
164) Explain Dictionary in Python with example
165) How can you copy the entire dictionary to a new dictionary?
166) How can you Update Python Dictionary?
167) Give example of dictionary items() method
168) How can you sort elements in Python dictionary?
169) Give an example of Dictionary len() and Python List cmp() method
170) What are all dictionary methods:
171) Explain Arithmetic operators with example
172) Give example of logical operators
173) Explain membership operators with example
174) Explain arrays in Pythons with example
175) How can you access array elements?
176) How can you insert elements in array?
177) How can you delete elements in array?
178) How can you search and get the index of a value in an array?
179) How can you reverse array in Python?
180) Give example to convert array to Unicode
181) Give an example of a class in Python
182) Explain Inheritance with example
183) Give example of Python constructors
184) How can you access values in string?
185) Explain all string operators with example
186) Give example of sleep() function in Python
187) What is timmer method in Python?
188) Give example of calendar class
189) Explain Python ZIP file with example
190) What are the common examples of exceptions in Python?
191) Explain important Python errors
192) Explain JSON dumps() in Python with example
193) Explain in detail JSON to Python (Decoding) with example
194) Write code for encode() method
195) Write a Python code for array in numpy to create Python Matrix
196) Write a Phyhon code for matrix subtraction
197) Write code for matrix multiplication
198) Explain slicing of matrix with example	
199) Write Python code to find average via loop
200) Write a code for list count 
201) Write a code to get index of an element in a list using for loop
202) Give an example of Python type()
203) How can you print without a newline in Python?
204) How to print the star(*) pattern without newline and space?
205)
206)
207)
208)
209)
210)
211)
212)
213)
214)
215)
216)
217)
218)
219)
220)
221)
222)
223)
224)
225)
226)
227)
228)
229)
230)
231)
232)
233)
234)
235)
236)
237)
238)
239)
240)
241)
242)
243)
244)
245)
246)
247)
248)
249)
250)
251)
252)
253)
254)
255)
256)
257)
258)
259)
260)
261)
262)
263)
264)
265)
266)
267)
268)
269)
270)
271)
272)
273)
274)
275)
276)
277)
278)
279)
280)
281)
282)
283)
284)
285)
286)
287)
288)
289)
290)
291)
292)
293)
294)
295)
296)
297)
298)
299)
300)
